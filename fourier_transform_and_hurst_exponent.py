# -*- coding: utf-8 -*-
"""Fourier Transform and Hurst Exponent

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14_ENu-XFTQZ_XbFvuxwyOHyfJjKo_e4W
"""

import numpy as np
from scipy.signal import find_peaks
import pandas as pd

# Function to load data from a text file
def load_data(file_path):
    return np.loadtxt(file_path, delimiter=' ', skiprows=1)

# Function to perform FFT and identify significant peaks
def analyse_fft(t, L, threshold=0.1, min_magnitude=0.15):
    # Performing FFT on the data
    fft_data = np.fft.fft(L)
    N = len(fft_data)
    n = np.arange(N)
    T = t[-1] - t[0] + 1  # Total duration of the signal
    freq = n / T  # Frequency components

    # Finding significant peaks
    peaks, properties = find_peaks(np.abs(fft_data) * 2 / N, height=threshold)
    peak_freqs = freq[peaks]
    peak_magnitudes = properties['peak_heights']

    # Filtering based on magnitude
    significant_peaks = peak_magnitudes > min_magnitude
    peak_freqs = peak_freqs[significant_peaks]
    peak_magnitudes = peak_magnitudes[significant_peaks]

    # Calculating periods (reciprocal of frequency)
    periods = 1 / peak_freqs

    return peak_freqs, peak_magnitudes, periods

# File paths for the datasets
path_to_data1 = '/content/data1_trend.txt'  # Update this path if needed
path_to_data2 = '/content/data2-amp0.5.txt' # Update this path if needed

# Load your datasets
data1 = load_data(path_to_data1)
data2 = load_data(path_to_data2)

# Extract time and values
t1, L1 = data1[:, 0], data1[:, 1]
t2, L2 = data2[:, 0], data2[:, 1]

# Set a common threshold for both datasets
common_threshold = 0.1

# Analyse both datasets with the common threshold and additional magnitude filtering
peak_freqs1, peak_magnitudes1, periods1 = analyse_fft(t1, L1, threshold=common_threshold)
peak_freqs2, peak_magnitudes2, periods2 = analyse_fft(t2, L2, threshold=common_threshold)

# Creating pandas DataFrame for better display
results1 = pd.DataFrame({'Frequency': peak_freqs1, 'Magnitude': peak_magnitudes1, 'Period': periods1})
results2 = pd.DataFrame({'Frequency': peak_freqs2, 'Magnitude': peak_magnitudes2, 'Period': periods2})

# Output the results in a table format
print("Data1 Peaks (Frequency, Magnitude, Period):")
print(results1)
print("\nData2 Peaks (Frequency, Magnitude, Period):")
print(results2)

import pandas as pd
import numpy as np

def refined_hurst_exponent(series):
    """Refined calculation of the Hurst exponent for a time series."""
    N = len(series)
    max_lags = min(100, N // 2)
    lags = range(2, max_lags)
    rs = []

    for lag in lags:
        # Split the series into segments
        chunks = [series[i:i + lag] for i in range(0, N, lag) if len(series[i:i + lag]) == lag]
        r_over_s = []

        for chunk in chunks:
            chunk_mean = np.mean(chunk)
            chunk_cum_deviation = np.cumsum(chunk - chunk_mean)
            range_deviation = np.max(chunk_cum_deviation) - np.min(chunk_cum_deviation)
            chunk_std = np.std(chunk)

            if chunk_std != 0:
                r_over_s.append(range_deviation / chunk_std)

        rs.append(np.mean(r_over_s))

    # Adjust the fitting method to be more sensitive to the scaling behaviour
    log_rs = np.log(rs)
    log_lags = np.log(list(lags))
    slope, intercept = np.polyfit(log_lags, log_rs, 1)

    return slope

# Load datasets
def load_dataset(file_path):
    return pd.read_csv(file_path, delim_whitespace=True, skiprows=1, header=None)

# Assuming the files are named 'data1_trend.txt' and 'data2-amp0.5.txt'
file_path_1 = 'data1_trend.txt'
file_path_2 = 'data2-amp0.5.txt'

data1 = load_dataset(file_path_1)
data2 = load_dataset(file_path_2)

# Extract the relevant columns (assuming the data is in the second column)
series1 = data1.iloc[:, 1]
series2 = data2.iloc[:, 1]

# Calculating Hurst exponents
hurst_exp1 = refined_hurst_exponent(series1)
hurst_exp2 = refined_hurst_exponent(series2)

print("Hurst exponent for the first dataset:", hurst_exp1)
print("Hurst exponent for the second dataset:", hurst_exp2)